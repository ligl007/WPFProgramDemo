<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TipPlugs">
    <Style x:Key="XCloseButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="ToolTip" Value="X"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid >
                        <Path x:Name="mPath" Data="M2.859125,1.4685 L1.4217499,2.889875 3.5625651,5.015809 1.4682621,7.1103131 2.8748757,8.5319866 4.9848079,6.4375335 7.111161,8.5628746 8.5181325,7.1407751 6.3768616,5.0154436 8.5341407,2.8744748 7.1115867,1.4523758 4.9855734,3.624328 z" Fill="White" Stretch="Fill" Margin="0.203" Stroke="#FFFFA1A1" Visibility="Collapsed"/>
                        <Path x:Name="nPath" Data="M2.859125,1.4685 L1.4217499,2.889875 3.5625651,5.015809 1.4682621,7.1103131 2.8748757,8.5319866 4.9848079,6.4375335 7.111161,8.5628746 8.5181325,7.1407751 6.3768616,5.0154436 8.5341407,2.8744748 7.1115867,1.4523758 4.9855734,3.624328 z" Fill="#4C666666" Stretch="Fill" Margin="0.203" Stroke="{x:Null}"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="nPath" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="mPath" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True"/>
                        <Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Tip-->
    <Style TargetType="{x:Type local:TextBoxTip}">
        <Setter Property="TopBrush" Value="{DynamicResource TextBoxTopBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="XButtonVisibility" Value="Collapsed"/>
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBoxTip}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="OuterglowRect" Visibility="Collapsed"
                                   Grid.ColumnSpan="2"
                                   RadiusX="2" RadiusY="2" Stroke="{DynamicResource OuterBlueBrush}"  StrokeThickness="1.5" />
                        <Border x:Name="Bd" SnapsToDevicePixels="True" 
							    CornerRadius="2"  Margin="1"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <TextBox x:Name="PART_Text" Grid.Column="0" 
                                     BorderThickness="0"
                                     Style="{x:Null}"
                                     Padding="2,2"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     IsReadOnly="{Binding IsReadOnly,Mode=TwoWay,
                                     UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBox.Background>
                                <VisualBrush Stretch="None" AlignmentX="Left">
                                    <VisualBrush.Transform>
                                        <TranslateTransform X="5" Y="0"/>
                                    </VisualBrush.Transform>
                                    <VisualBrush.Visual>
                                        <TextBlock x:Name="PART_EmptyText" Grid.Column="0" Text="{TemplateBinding TooTipText}" 
                                            FontSize="12"   Visibility="Collapsed" Foreground="{TemplateBinding Foreground}"  
                                                   Focusable="False"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Rectangle x:Name="glowRect" Margin="2 2 2 0" 
                                   RadiusX="2" RadiusY="2" Stroke="{x:Null}" 
                                   SnapsToDevicePixels="true" StrokeThickness="0" 
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding TopBrush}" Height="3" VerticalAlignment="Top" >

                        </Rectangle>
                        <Button  Grid.Column="1" 
                                 x:Name="Xbtn"
                                 ToolTip="Clear"
                                 Visibility="{TemplateBinding XButtonVisibility}"
                                 VerticalAlignment="Center" Margin="7 0"
                                 Command="{x:Static local:TextBoxTip.XButtonCommand}"
                                 Style="{StaticResource XCloseButton}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsFocused,ElementName=PART_Text}" Value="False"/>
                                <Condition Binding="{Binding Path=Text,ElementName=PART_Text}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EmptyText" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>

                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsReadOnly}" Value="True"/>
                                <Condition Binding="{Binding Path=Text,ElementName=PART_Text}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EmptyText" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>-->

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="OuterglowRect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource TextBoxBorderRead}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TextBoxBgRead}"/>
                            <Setter Property="Visibility" TargetName="glowRect" Value="Collapsed"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Text,ElementName=PART_Text}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="Xbtn" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- Sign TextBox-->
    <local:TextBoxConverter x:Key="EmptyConverter"/>
    <Style TargetType="{x:Type local:TextBoxSign}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle"  Value="{x:Null}"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBoxSign}">

                    <Border x:Name="OutBorder" BorderThickness="1"  CornerRadius="2" SnapsToDevicePixels="True">
                        <Border x:Name="InnerBorder"
                                CornerRadius="2" SnapsToDevicePixels="True"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <TextBox x:Name="PART_Text" Grid.Column="0" 
                                        BorderThickness="0"
                                        Style="{x:Null}"
                                        FocusVisualStyle="{x:Null}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsReadOnly="{Binding IsReadOnly,Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBox.Background>
                                        <VisualBrush Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Transform>
                                                <TranslateTransform X="5" Y="0"/>
                                            </VisualBrush.Transform>
                                            <VisualBrush.Visual>
                                                <TextBlock x:Name="PART_EmptyText" Grid.Column="0" Text="{TemplateBinding TooTipText}" 
                                            FontSize="12"   Visibility="Collapsed" Foreground="{TemplateBinding Foreground}"  
                                                   Focusable="False"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </TextBox.Background>
                                </TextBox>
                                <TextBox x:Name="txbTrimming"
                                        Visibility="Hidden"
                                        BorderThickness="0"
                                        Style="{x:Null}"
                                        FocusVisualStyle="{x:Null}"
                                        Background="Transparent"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, ElementName=PART_Text}" Value="False"/>
                                <Condition Binding="{Binding Text, ElementName=PART_Text,Converter={StaticResource EmptyConverter}}" Value=""/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_EmptyText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Text" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, ElementName=PART_Text}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OutBorder" Property="BorderBrush" Value="Gray"/>
                            <Setter Property="Background" Value="White"  TargetName="InnerBorder"/>
                            <Setter Property="BorderBrush" Value="Transparent" TargetName="InnerBorder"/>
                            <Setter Property="BorderThickness" Value="0" TargetName="InnerBorder"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsFocused, ElementName=PART_Text}" Value="False"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="OutBorder" Property="BorderBrush" Value="#7F353535"/>
                            <Setter Property="BorderBrush"  Value="#B2FFFFFF" TargetName="InnerBorder"/>
                            <Setter Property="Background" TargetName="InnerBorder">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                        <GradientStop Offset="0" Color="#A0FFFFFF"/>
                                        <GradientStop Offset="0.1" Color="#70FFFFFF"/>
                                        <GradientStop Offset="0.4" Color="#0CFFFFFF"/>
                                        <GradientStop Offset="0.5" Color="#00FFFFFF"/>
                                        <GradientStop Offset="0.6" Color="#0CFFFFFF"/>
                                        <GradientStop Offset="0.9" Color="#70FFFFFF"/>
                                        <GradientStop Offset="1" Color="#A0FFFFFF"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--validation Template-->
    <ControlTemplate x:Key="validationTemplateBorder">
        <Grid>
            <Border x:Name="validationBorder" CornerRadius="2" BorderThickness="1.3"   BorderBrush="Red">
                <Border.Resources>
                    <Storyboard x:Key="_blink">
                        <ColorAnimationUsingKeyFrames AutoReverse="True" BeginTime="00:00:00" Storyboard.TargetName="validationBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" RepeatBehavior="00:00:05">
                            <SplineColorKeyFrame KeyTime="00:00:00.5" Value="#00FF0000"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </Border.Resources>
                <Border.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource _blink}" />
                    </EventTrigger>
                </Border.Triggers>
            </Border>
            <AdornedElementPlaceholder/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type local:TextBoxValidation}">
        <Setter Property="Height" Value="26"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationTemplateBorder}"/>
        <Setter Property="ErrorText" Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                 Path=(Validation.Errors)[0].ErrorContent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextBoxValidation}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="OuterglowRect" Visibility="Collapsed"
                                       RadiusX="2" RadiusY="2" Stroke="{DynamicResource OuterBlueBrush}"  StrokeThickness="1.5" />
                        <Border x:Name="Bd" SnapsToDevicePixels="True" 
							    CornerRadius="2"  Margin="1"
                                Background="White"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <TextBox x:Name="PART_Text" Grid.Column="0" 
                                     Style="{x:Null}"
                                     Padding="2,2"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     BorderThickness="0"
                                     IsReadOnly="{Binding IsReadOnly,Mode=TwoWay,
                                     UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                     Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBox.Background>
                                <VisualBrush Stretch="None" AlignmentX="Left">
                                    <VisualBrush.Transform>
                                        <TranslateTransform X="5" Y="0"/>
                                    </VisualBrush.Transform>
                                    <VisualBrush.Visual>
                                        <TextBlock x:Name="PART_EmptyText" Grid.Column="0" Text="{TemplateBinding TootipText}" 
                                            FontSize="12" Visibility="Collapsed" Foreground="LightGray"  Focusable="False"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </TextBox.Background>
                        </TextBox>
                        <Rectangle x:Name="glowRect" Margin="2 2 2 0" 
                                   RadiusX="2" RadiusY="2" Stroke="{x:Null}" Fill="{DynamicResource TextBoxTopBrush}"
                                   SnapsToDevicePixels="true" StrokeThickness="0"  Height="3" VerticalAlignment="Top" >

                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PART_EmptyText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="PART_EmptyText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="OuterglowRect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource TextBoxBorderRead}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TextBoxBgRead}"/>
                            <Setter Property="Visibility" TargetName="glowRect" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter TargetName="OuterglowRect" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>
