<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <LinearGradientBrush  x:Key="ButtonNormalBackground" StartPoint="0.499999,0.0364487" EndPoint="0.499999,0.963558">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFC3C4C4" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="IsPressedBackground" StartPoint="0.499999,0.0364487" EndPoint="0.499999,0.963558">
        <GradientStop Color="White" Offset="1"/>
        <GradientStop Color="#FFC3C4C4" Offset="0"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MouseOverBackground" EndPoint="0.499999,0.963558" StartPoint="0.499999,0.0364487">
        <GradientStop Color="#FFF1F8FB" Offset="0"/>
        <GradientStop Color="#FFBBDFF1" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <!--聊天的按钮-->
    <Style x:Key="ChatButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Grid>
                        <Border x:Name="back" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{DynamicResource IsPressedBackground}"
                                    CornerRadius="3" BorderBrush="{StaticResource ButtonNormalBorder}" Visibility="Collapsed">
                            <Border.Effect>
                                <DropShadowEffect Color="#FF18C5FF" Direction="319"
                                                      RenderingBias="Quality" ShadowDepth="0" BlurRadius="8"/>
                            </Border.Effect>
                        </Border>
                        <Border x:Name="fore" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="3" BorderBrush="{StaticResource ButtonNormalBorder}">
                        </Border>

                        <!--按钮内容-->
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Setter Property="Background" TargetName="fore">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.499999,0.963558" StartPoint="0.499999,0.0364487">
                                        <GradientStop Color="#FFF1F8FB" Offset="0"/>
                                        <GradientStop Color="#FFBBDFF1" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">

                            <Setter Property="Visibility" Value="Collapsed" TargetName="fore"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="back"/>
                        </Trigger>
                     
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Background" Value="{DynamicResource MouseOverBackground}" TargetName="fore"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
   
    <!--下划线按钮-->
    <Style x:Key="UnderLineButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <TextBlock Text="{TemplateBinding Content}" 
                                   TextDecorations="Underline"
                                   Foreground="{TemplateBinding Foreground}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--聊天上标题按钮-->
    <Style x:Key="ChatButtonTitle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel>
                        <TextBlock Text="{TemplateBinding Content}"  FontSize="12"
                                   VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <TextBlock.Effect>
                                <DropShadowEffect BlurRadius="8" Color="White" Direction="0" ShadowDepth="0"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True" >
                            <Setter Property="Visibility" TargetName="Underline" Value="Visible"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!--蓝色点击按钮-->
    <Style x:Key="BlueButtonStyle"  TargetType="Button">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <ContentControl  VerticalAlignment="Center" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            Content="{TemplateBinding Content}">

                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   <!--default button-->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border" BorderBrush="{DynamicResource normalBorderBrush}" BorderThickness="1" Background="{DynamicResource normalBackBrush}" CornerRadius="3" SnapsToDevicePixels="True"/>
                        <Border BorderBrush="{DynamicResource wborderbrush}" BorderThickness="1" Margin="1" CornerRadius="3" SnapsToDevicePixels="True"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True"/>
                        <Trigger Property="IsDefaulted" Value="True"/>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource mouseBackBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource mouseBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource pressBackBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource EnableBackBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource EnableBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EnableForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--default button-->

 
   
</ResourceDictionary>