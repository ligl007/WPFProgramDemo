<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:control="clr-namespace:Commons;assembly=Commons"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- DefaultWindowTemplate -->
    <ControlTemplate x:Key="DefaultWindowTemplate" TargetType="Window">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <control:MoveBorder Grid.RowSpan="3" CornerRadius="3" Background="{TemplateBinding Background}">

            </control:MoveBorder>

            <!--蒙版色-->
            <Border   CornerRadius="3 3 0 0" IsHitTestVisible="False"
                      Background="{StaticResource Brush21}">
                <Border    CornerRadius="3 3 0 0" VerticalAlignment="Top"
                           Background="{StaticResource WindowTitleBackground}" Height="20">

                </Border>
            </Border>
            <!--上分割线-->
            <Border     Grid.Row="0" 
                        Background="{StaticResource TopSpliter}"
                        Height="2"   VerticalAlignment="Bottom"  >
            </Border>


            <DockPanel HorizontalAlignment="Stretch">
                <Image Source="{TemplateBinding Icon}" Height="24" Width="24" Margin="7,7,7,7"
                           IsHitTestVisible="False"/>
                <TextBlock Text="{TemplateBinding Title}" Margin="0 9 0 0 " VerticalAlignment="Top" IsHitTestVisible="False" />
                <control:WindowButtons x:Name="WinButtons"
                                         PlugButtons="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PlugButtons}"
                                         State="{Binding RelativeSource={RelativeSource TemplatedParent},Path=WindowState,Mode=TwoWay}"
                                         HorizontalAlignment="Right" VerticalAlignment="Top"/>
            </DockPanel>

            <!--4-1背景色-->
            <Rectangle Fill="{DynamicResource Brush41}" Grid.Row="1" IsHitTestVisible="False"/>

            <!--Bottom-->
            <Border  Grid.Row="2" SnapsToDevicePixels="True" Style="{StaticResource BottomBorderStyle}" 
                     Background="{StaticResource Brush22}"
                     CornerRadius="0 0 3 3">
                <Rectangle Fill="{DynamicResource BottomSpliter}" Grid.Row="1" Height="2" VerticalAlignment="Top"/>
            </Border>

            <AdornerDecorator Grid.Row="1" Grid.RowSpan="2">
                <ContentPresenter />
            </AdornerDecorator>

            <Border Grid.RowSpan="3" CornerRadius="3" BorderBrush="#AFFFFFFF" BorderThickness="2"/>
            <control:WindowBorder Grid.RowSpan="3" x:Name="WinBorder" CornerRadius="3"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Effect="{TemplateBinding Effect}"
                                    BitmapEffect="{TemplateBinding BitmapEffect}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="WinButtons" Property="IsMinimizeEnable" Value="false"/>
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
   
    <!--切换页面窗口样式-->
    <ControlTemplate x:Key="DefaultWindowTemplate2" TargetType="Window">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <control:MoveBorder Grid.RowSpan="3" CornerRadius="3" Background="{TemplateBinding Background}">

            </control:MoveBorder>

            <!--蒙版色-->
            <Border   CornerRadius="3 3 0 0" IsHitTestVisible="False"
                      Background="{StaticResource Brush21}">
                <Border    CornerRadius="3 3 0 0" VerticalAlignment="Top"
                           Background="{StaticResource WindowTitleBackground}" Height="20">

                </Border>
            </Border>
            <!--上分割线-->
            <Border     Grid.Row="0" 
                        Background="{StaticResource TopSpliter}"
                        Height="2"   VerticalAlignment="Bottom"  >
            </Border>


            <DockPanel HorizontalAlignment="Stretch">
                <Image Source="{TemplateBinding Icon}" Height="24" Width="24" Margin="7,7,7,7"
                           IsHitTestVisible="False"/>
                <TextBlock Text="{TemplateBinding Title}" Margin="0 9 0 0 " VerticalAlignment="Top" IsHitTestVisible="False" />
                <control:WindowButtons x:Name="WinButtons"
                                         PlugButtons="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PlugButtons}"
                                         State="{Binding RelativeSource={RelativeSource TemplatedParent},Path=WindowState,Mode=TwoWay}"
                                         HorizontalAlignment="Right" VerticalAlignment="Top"/>
            </DockPanel>

            <!--4-1背景色-->
            <!--<Rectangle Fill="{DynamicResource Brush41}" Grid.Row="1" IsHitTestVisible="False"/>-->

            <!--Bottom-->
            <Border  Grid.Row="2" SnapsToDevicePixels="True" Style="{StaticResource BottomBorderStyle}"
                     Background="{StaticResource Brush22}"
                     CornerRadius="0 0 3 3">
                <Rectangle Fill="{DynamicResource BottomSpliter}" Grid.Row="1" Height="2" VerticalAlignment="Top"/>
            </Border>

            <AdornerDecorator Grid.Row="1" Grid.RowSpan="2">
                <ContentPresenter />
            </AdornerDecorator>

            <Border Grid.RowSpan="3" CornerRadius="3" BorderBrush="#AFFFFFFF" BorderThickness="2"/>
            <control:WindowBorder Grid.RowSpan="3" x:Name="WinBorder" CornerRadius="3"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Effect="{TemplateBinding Effect}"
                                    BitmapEffect="{TemplateBinding BitmapEffect}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="WinButtons" Property="IsMinimizeEnable" Value="false"/>
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--浮动弹出-->
    <ControlTemplate x:Key="DefaultWindowTemplate3" TargetType="Window">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <control:MoveBorder Grid.RowSpan="3" CornerRadius="3" Background="{TemplateBinding Background}">

            </control:MoveBorder>

            <!--蒙版色-->
            <Border   CornerRadius="3 3 0 0" IsHitTestVisible="False"
                      Background="{StaticResource Brush21}">
                <Border    CornerRadius="3 3 0 0" VerticalAlignment="Top"
                           Background="{StaticResource WindowTitleBackground}" Height="20">

                </Border>
            </Border>
            <!--上分割线-->
            <Border     Grid.Row="0" 
                        Background="{StaticResource TopSpliter}"
                        Height="2"   VerticalAlignment="Bottom"  >
            </Border>


            <DockPanel HorizontalAlignment="Stretch">
                <Image Source="{TemplateBinding Icon}" Height="24" Width="24" Margin="7,7,7,7"
                           IsHitTestVisible="False"/>
                <TextBlock Text="{TemplateBinding Title}" Margin="0 9 0 0 " VerticalAlignment="Top" IsHitTestVisible="False" />
                <control:WindowButtons x:Name="WinButtons"
                                         PlugButtons="{Binding RelativeSource={RelativeSource TemplatedParent},Path=PlugButtons}"
                                         State="{Binding RelativeSource={RelativeSource TemplatedParent},Path=WindowState,Mode=TwoWay}"
                                         HorizontalAlignment="Right" VerticalAlignment="Top"/>
            </DockPanel>

            <!--4-1背景色-->
            <Rectangle Fill="{DynamicResource Brush41}" Grid.Row="1" IsHitTestVisible="False"/>

           
            <AdornerDecorator Grid.Row="1" Grid.RowSpan="2">
                <ContentPresenter />
            </AdornerDecorator>

            <Border Grid.RowSpan="3" CornerRadius="3" BorderBrush="#AFFFFFFF" BorderThickness="2"/>
            <control:WindowBorder Grid.RowSpan="3" x:Name="WinBorder" CornerRadius="3"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Effect="{TemplateBinding Effect}"
                                    BitmapEffect="{TemplateBinding BitmapEffect}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResizeMode" Value="CanMinimize">
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter TargetName="WinButtons" Property="IsMinimizeEnable" Value="false"/>
                <Setter TargetName="WinButtons" Property="IsNormalMaxEnable" Value="false"/>
                <Setter TargetName="WinBorder" Property="IsResizable" Value="false"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- DefaultWindowStyle -->
    <Style x:Key="DefaultWindowStyle" TargetType="Window">
        <Setter Property="Template" Value="{StaticResource DefaultWindowTemplate}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ShowInTaskbar" Value="True"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="Icon" Value="pack://application:,,,/Images/logo.ico"/>-->
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
    </Style>

    <!-- FixedSizeWindowStyle -->
    <Style x:Key="FixedSizeWindowStyle" TargetType="Window" BasedOn="{StaticResource DefaultWindowStyle}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
    </Style>

    <!--切换页面窗口样式-->
    <Style x:Key="DefaultWindowStyle2" TargetType="Window">
        <Setter Property="Template" Value="{StaticResource DefaultWindowTemplate2}"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ShowInTaskbar" Value="True"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <!--<Setter Property="Icon" Value="pack://application:,,,/Images/logo.ico"/>-->
        <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
    </Style>

    <!-- FindFixedSizeWindowStyle -->
    <Style x:Key="FindFixedSizeWindowStyle" TargetType="Window" BasedOn="{StaticResource DefaultWindowStyle}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="SizeToContent" Value="WidthAndHeight"/>
    </Style>

    <Style x:Key="WindowStyle3" TargetType="Window" BasedOn="{StaticResource DefaultWindowStyle}">
        <Setter Property="Template" Value="{StaticResource DefaultWindowTemplate3}"/>
         
    </Style>

</ResourceDictionary>